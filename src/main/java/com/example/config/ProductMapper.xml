<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductMapper"> <!-- 구별용 이름 -->

	<select id="selectProductMainList" parameterType="String" resultType="ProductDTO">
		SELECT * 
		FROM product
		<choose>
	        <when test="order == 'PRODUCT_CREATEDAT'">
	            ORDER BY PRODUCT_CREATEDAT DESC
	        </when>
	        <otherwise>
	            ORDER BY PRODUCT_VIEW DESC
	        </otherwise>
	    </choose>
	</select>

	<select id="selectDetailproduct" parameterType="int"
		resultType="ProductDTO">
		SELECT * FROM product WHERE product_id = #{product_id}
	</select>

	<select id="selectProductList" resultType="ProductDTO"
		parameterType="hashmap">
		SELECT * FROM product
		<where>
			<if test="category!=null">
				product_category_id=#{category}
			</if>
			<if test="category != null and search != null">
				AND
			</if>
			<if test="search != null">
				product_name LIKE '%'||#{search}||'%'
			</if>
		</where>
		<if test="sortList != null">
			ORDER BY
			<foreach collection="sortList" item="item" separator=" ">
				${item}
			</foreach>
		</if>
	</select>

	<select id="selectProductListCount" parameterType="hashmap"
		resultType="int">
		SELECT count(*) FROM product
		<where>
			<if test="category!=null">
				product_category_id=#{category}
			</if>
			<if test="category != null and search != null">
				AND
			</if>
			<if test="search != null">
				product_name LIKE '%'||#{search}||'%'
			</if>
		</where>
	</select>

	<update id="addViewCount" parameterType="int">
		UPDATE product SET
		product_view = product_view+1 WHERE
		product_id=#{product_id}
	</update>

	<select id="maxProductId" resultType="int">
		SELECT LAST_NUMBER FROM
		USER_SEQUENCES WHERE SEQUENCE_NAME =
		'PRODUCT_ID_SEQ'
	</select>

	<delete id="productDelete" parameterType="int">
		DELETE FROM product
		WHERE product_id = #{product_id}
	</delete>

	<insert id="insertProduct" parameterType="ProductDTO">
		insert into product
		(product_category_id,product_name,product_price,product_description,product_imagename,product_createdat,product_isactive)
		values
		(#{product_category_id},#{product_name},#{product_price},#{product_description},#{product_imagename},sysdate,#{product_isactive})
	</insert>

	<update id="updateProduct" parameterType="ProductDTO">
		UPDATE product SET
		product_category_id=#{product_category_id},
		product_name=#{product_name}, product_price=#{product_price},
		product_isactive=#{product_isactive},
		product_description=#{product_description}
		<if test="product_imagename!=null">
			, product_imagename=#{product_imagename}
		</if>
		where product_id = #{product_id}
	</update>
	
	<!-- 옵션 없는 상품 재고 업데이트 -->
	<update id="updateProductStock" parameterType="com.example.dto.ProductDTO">
	    UPDATE product
	    SET product_stock = #{product_stock}
	    WHERE product_id = #{product_id}
	</update>
	
	<!-- 상품 옵션 삽입 -->
	<insert id="insertProductOption" parameterType="ProductOptionDTO">
	    INSERT INTO PRODUCT_OPTION (PRODUCT_ID, OPTION_TYPE, OPTION_NAME, STOCK)
	    VALUES (#{product_id}, #{option_type}, #{option_name}, #{stock})
	</insert>

	<!-- 상품 옵션 가져오기 -->
	<select id="selectProductOptions" parameterType="int"
		resultType="ProductOptionDTO">
		SELECT OPTION_ID, PRODUCT_ID, OPTION_TYPE, OPTION_NAME, STOCK FROM PRODUCT_OPTION 
		WHERE PRODUCT_ID = #{productId}
		ORDER BY OPTION_ID
	</select>

	<update id="updateProductOption"
		parameterType="ProductOptionDTO">
		UPDATE PRODUCT_OPTION
		SET OPTION_NAME = #{option_name},
		STOCK = #{stock}
		WHERE OPTION_ID = #{option_id}
	</update>

	<delete id="deleteProductOption" parameterType="int">
		DELETE FROM
		PRODUCT_OPTION WHERE OPTION_ID = #{optionId}
	</delete>

	<select id="selectCategoryList" resultType="ProductCategoryDTO">
		SELECT * FROM
		PRODUCT_CATEGORY
	</select>

	<select id="checkRecentView" parameterType="map"
		resultType="ProductRecentDTO">
		SELECT * FROM PRODUCT_RECENT WHERE PRODUCT_ID =
		#{product_id} AND USER_ID = #{user_id}
	</select>

	<insert id="insertRecentView" parameterType="map">
		INSERT INTO
		PRODUCT_RECENT (PRODUCT_ID, USER_ID, VIEWDATE)
		VALUES (#{product_id},
		#{user_id}, SYSDATE)
	</insert>

	<update id="updateRecentView" parameterType="map">
		UPDATE
		PRODUCT_RECENT SET VIEWDATE = SYSDATE
		WHERE PRODUCT_ID = #{product_id}
		AND USER_ID = #{user_id}
	</update>

	<select id="getRecentProducts" parameterType="String"
		resultType="ProductRecentDTO">
		SELECT * FROM PRODUCT_RECENT
		WHERE USER_ID = #{user_id}
		ORDER BY VIEWDATE DESC
	</select>

	<delete id="deleteRecentView" parameterType="String">
		DELETE FROM
		PRODUCT_RECENT
		WHERE USER_ID = #{user_id}
		AND VIEWDATE = (SELECT
		MIN(VIEWDATE) FROM PRODUCT_RECENT WHERE USER_ID =
		#{user_id})
	</delete>
</mapper>