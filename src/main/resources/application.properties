spring.application.name=ShoppingMall
#server
server.port=8090
server.servlet.context-path=/app
#viewResolver
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
#정적자원관리
spring.mvc.static-path-pattern=/resources/**
#외부자원경로
external.images.dir=C:/images/
#databaseSource
spring.datasource.dbcp2.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=class4
spring.datasource.password=1234
#mybatis 설정
mybatis.mapper-locations=com/example/config/*.xml
mybatis.type-aliases-package=com.example.dto
#notice 추가 설정
spring.web.resources.cache.cachecontrol.max-age=0
spring.datasource.hikari.data-source-properties.oracle.jdbc.timezoneAsRegion=false 
#security log level setting
#logging.level.org.springframework.security=trace
#최초 create, 이후 none으로 변경
#create 테이블 드롭 후 재생성
#생성 후 none으로 변경할 것
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=update
#jpa 사용시 info 레벨
logging.level.root=error
logging.level.org.hibernate=info
#SQL 실행정보출력
#spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

#Google OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile,email

#네이버 OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=
spring.security.oauth2.client.registration.naver.client-secret=
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

#카카오 OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=
spring.security.oauth2.client.registration.kakao.client-secret=
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# OAuth2 프로바이더 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-info-authentication-method=header
#Naver 응답 값 resultCode, message, response 중 response 지정
spring.security.oauth2.client.provider.naver.user-name-attribute=response

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-info-authentication-method=header
#Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

#에러페이지 설정
server.error.whitelabel.enabled=true
